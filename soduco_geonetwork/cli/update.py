"""CLI module to call parse function from yaml_to_xml module
"""

import click
from soduco_geonetwork.api_wrapper import (config, dataset, geonetwork,
                                              helpers)


@click.command()
@click.argument('input_csv_file', type=click.Path(exists=True))
@click.argument('edition_location', type=str)
@click.argument('xml_patch', type=str)


def update(input_csv_file, edition_location, xml_patch):
    """
    Needs 3 arguments:

    - A csv file with a column "geonetwork_uuid" with uuids to delete

    - An edition location in the document (in Xpath)

    - A xml element to save at the location (it will erase any previous element)
    """

    session = geonetwork.log_in(config.config['GEONETWORK_USER'],
                                config.config['GEONETWORK_PASSWORD'])

    uuid_list = helpers.uuid_list_from_csv(input_csv_file)

    response = dataset.update(uuid_list, edition_location, xml_patch, session)
    print(response)

@click.command()
@click.argument('csv_postponed_values', type=click.Path(exists=True))

def update_postponed_values(csv_postponed_values):
    """Edit the postponed links between uploaded records

    Needs a csv file with postponed values
    (generated by parse command and updated at upload with geonetwork uuid)
    """

    session = geonetwork.log_in(config.config['GEONETWORK_USER'],
                                config.config['GEONETWORK_PASSWORD'])

    postponed_list = helpers.read_postponed_values(csv_postponed_values)

    for item in postponed_list:
        dataset.edit_postponed_values(item, session)
